apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "service.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "service.fullname" . }}
    release: {{ .Release.Name }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  strategy:
    type: {{ .Values.strategy.type | default "RollingUpdate" }}
    {{- if eq .Values.strategy.type "RollingUpdate" }}
    rollingUpdate:
      maxUnavailable: {{ .Values.strategy.rollingUpdate.maxUnavailable | default 1 }}
      maxSurge: {{ .Values.strategy.rollingUpdate.maxSurge | default 1 }}
    {{- end }}
  selector:
    matchLabels:
      app: {{ include "service.fullname" . }}
      release: {{ .Release.Name }}
  template:
    metadata:
      labels:
        app: {{ include "service.fullname" . }}
        release: {{ .Release.Name }}
      annotations:
        configmap-hash: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        {{- if .Values.podAnnotations }}
        {{ toYaml .Values.podAnnotations | indent 8 }}
        {{- end }}
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | nindent 8 }}
      {{- end }}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "service.fullname" . }}
      {{- end }}
      {{- if .Values.initContainers }}
      initContainers:
      {{- range $key, $value := .Values.initContainers }}
        - name: "{{ $key }}"
          image: "{{ $value.repository }}:{{ $value.tag }}"
{{ omit $value "repository" "tag" | toYaml | indent 10 }}
      {{- end }}
      {{- end }}
      containers:
        - name: {{ include "service.fullname" . }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- if .Values.command.enabled }}
          command:
            - {{ .Values.command.cli }}
          {{- end }}
          {{- with .Values.command.args }}
          args:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            {{- range $key, $value := .Values.containerPorts }}
            - name: {{ $key }}
              containerPort: {{ $value }}
              protocol: TCP
            {{- end }}
          env:
            {{- range $key, $value := .Values.env }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}
          envFrom:
          {{- if .Values.configs.enabled }}
            - configMapRef:
                name: {{ include "service.fullname" . }}
          {{- end }}
          {{- if .Values.externalConfigs.enabled }}
            - configMapRef:
                name: {{ .Values.externalConfigs.name }}
          {{- end }}
          {{- if .Values.externalSecret }}
            - secretRef:
                name: {{ include "service.fullname" . }}
          {{- end }}
          {{- if .Values.subExternalSecret.enabled }}
            - secretRef:
                name: {{ .Values.subExternalSecret.name }}
          {{- end }}
          {{- if .Values.livenessProbe }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.readinessProbe }}
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          {{- end }}
          {{- if .Values.startupProbe }}
          startupProbe:
            {{- toYaml .Values.startupProbe | nindent 12 }}
          {{- end }}
          {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- if .Values.sidecar.enabled }}
        - name: {{ .Values.sidecar.name }}
          image: "{{ .Values.sidecar.image.repository }}:{{ .Values.sidecar.image.tag }}"
          imagePullPolicy: {{ .Values.sidecar.image.pullPolicy | default "IfNotPresent" }}
          ports:
            {{- range $key, $value := .Values.sidecar.containerPorts }}
            - name: {{ $key }}
              containerPort: {{ $value }}
              protocol: TCP
            {{- end }}
          {{- with .Values.sidecar.env }}
          env:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecar.volumeMounts }}
          volumeMounts:
            {{ toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.sidecar.resources }}
          resources:
            {{ toYaml . | nindent 12 }}
          {{- end }}
        {{- end }}
      {{- with .Values.hostAliases }}
      hostAliases:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.volumes }}
      volumes:
        {{ toYaml . | nindent 8 }}
      {{- end }}
